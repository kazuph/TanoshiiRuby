# encoding : utf-8
class RingArray < Array # Arrayクラスを継承する
  def [](i) # []
    idx = i % size # sizeはArrayのインスタンスメソッドでArrayの要素数が入る
    super(idx) # スーパークラスのメソッドを呼ぶ
  end
end

eto = RingArray["子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"]
# 同じ
eto = RingArray.[]("子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥")
# これもおなじ
eto = RingArray.[] "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"
eto = RingArray.[]                          "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"

# 普通に↑で定義したメソッドを使おうと思うと以下のようになるが
p eto.[](6)
p eto.[](11)
p eto.[](15)
p eto.[](-1)

# ()は省略できるよね
p eto.[]6
p eto.[] 11
p eto.[]  15
p eto.[]   -1

# Rubyだと↑は以下のような構文としても書ける
# 他の言語だとこれが普通だよね
p eto[6]
p eto[11]
p eto[15]
p eto[-1]

# 試し書き
p 1.+(2)
# ()は必要ないなら省略できる、の法則
p 1 + 2

# 関係ないけど
puts
print "cat", [1,2,3], 99, "\n"
$, = "::"
$\ = "\n"
print "cat", [1,2,3], 99



# さすが全てがオブジェクトだ




